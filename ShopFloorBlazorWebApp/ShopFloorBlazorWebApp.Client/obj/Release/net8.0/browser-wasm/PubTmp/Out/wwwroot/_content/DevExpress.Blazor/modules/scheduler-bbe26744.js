import{d as t}from"./dom-da46d023.js";import{D as e}from"./dx-html-element-base-35a73e3c.js";import{DxUIHandlersBridgeTagName as n}from"./dx-ui-handlers-bridge-c2148178.js";import{a as i,D as s,j as o,u as a}from"./dom-utils-dfeed069.js";import{H as r,e as l,f as p,a as c,b as m}from"./dx-html-element-pointer-events-helper-1557f7d5.js";import{S as d}from"./dx-scroll-viewer-17349981.js";import{t as u}from"./touch-4bff3f51.js";import{_ as h}from"./_tslib-6e8ca86b.js";import{S as f}from"./scroll-viewer-css-classes-4d6797bc.js";import{S as g}from"./single-slot-element-base-3afabaf0.js";import{n as A}from"./property-4ec0b52d.js";import{d as C}from"./constants-058ebb50.js";import"./browser-d96520d8.js";import"./common-f853e871.js";import"./data-qa-utils-8be7c726.js";import"./dx-license-1f911fcd.js";import"./css-classes-cee8476c.js";import"./eventhelper-8570b930.js";import"./constants-791d6f9b.js";import"./devices-afeafb19.js";import"./const-90026e45.js";import"./dx-ui-element-dd33ec67.js";import"./lit-element-base-29f49d31.js";import"./lit-element-462e7ad3.js";import"./logicaltreehelper-7b19cc30.js";import"./layouthelper-0c7c89da.js";import"./point-e4ec110e.js";class v{static throttle(t,e){let n=!1,i=null,s=this;return function o(a){if(n)return i=a,void(s=this);t.apply(this,[a]),n=!0,setTimeout((()=>{n=!1,i&&(o.apply(s,[i]),i=null)}),e)}}}class T{}T.ContainerIndex="data-container-index",T.FirstContainerIndex="data-first-container-index",T.LastContainerIndex="data-last-container-index",T.FirstCellIndex="data-first-cell-index",T.LastCellIndex="data-last-cell-index",T.ColumnsCount="data-columns-count",T.Column="data-column",T.Row="data-row",T.RowSpan="data-row-span",T.Key="data-key",T.Start="data-start",T.End="data-end",T.Duration="data-duration",T.AllDay="data-allday",T.Resource="data-resource",T.SnapToCellsMode="snap-to-cells-mode",T.AppointmentTopPosition="data-appointment-top-position",T.UtcOffset="data-uct-offset";class y{}var I;y.TimeCellsContainerClassName="dxbl-sc-timecells-container",y.VerticalAppointmentsClassName="dxbl-sc-vertical-apts",y.HorizontalAppointmentsClassName="dxbl-sc-horizontal-apts",y.VerticalAppointmentClassName="dxbl-sc-vertical-apt",y.HorizontalAppointmentClassName="dxbl-sc-horizontal-apt",y.CompactAppointmentClassName="dxbl-sc-apt-compact",y.EditableAppointmentClassName="dxbl-sc-apt-edited",y.DateCellHeadClassName="dxbl-date-cell-head",y.MonthViewClassName="dxbl-sc-month",y.DateHeaderClassName="dxbl-sc-date-hr",y.TimeCellClassName="dxbl-sc-time-cell",y.TodayClassName="dxbl-sc-today",y.HorizontalViewClassName="dxbl-sc-horizontal-view",y.TimeMarkerWrapperClassName="dxbl-sc-time-marker-wrapper",y.TimeMarkerWrapperInvisibleClassName="dxbl-sc-time-marker-wrapper-invisible",y.TimeMarkerClassName="dxbl-sc-time-marker",y.TimeMarkerImageClassName="dxbl-sc-time-marker-image",y.TimeMarkerLineClassName="dxbl-sc-time-marker-line",y.TimeIndicatorClassName="dxbl-sc-time-indicator",y.AppointmentClassName="dxbl-sc-apt",y.SelectedAppointmentClassName="dxbl-sc-apt-selected",y.TargetAppointmentClassName="dxbl-sc-apt-target",y.DisableAppointmentClassName="dxbl-sc-apt-disable",y.VerticalResourceHeaderClassName="dxbl-v-resource-header",y.ResourcesContainerClassName="dxbl-sc-resources-container",y.HeadersContainerClassName="dxbl-sc-headers-container",y.AllDayAreaClassName="dxbl-sc-all-day-area",y.TimelineViewClassName="dxbl-sc-timeline",y.TopHandleClassName="dxbl-top-handle",y.BottomHandleClassName="dxbl-bottom-handle",y.LeftHandleClassName="dxbl-left-handle",y.RightHandleClassName="dxbl-right-handle",y.VerticalViewClassName="dxbl-sc-vertical-view",y.View="dxbl-view",function(t){t[t.None=0]="None",t[t.Auto=1]="Auto",t[t.Always=2]="Always"}(I||(I={}));const b=I;class S{getContainerIndex(t){return S.getAttributeIntValue(t,T.ContainerIndex,-1)}getFirstContainerIndex(t){return S.getAttributeIntValue(t,T.FirstContainerIndex,-1)}getLastContainerIndex(t){return S.getAttributeIntValue(t,T.LastContainerIndex,-1)}getAppointmentFirstCellIndex(t){return S.getAttributeIntValue(t,T.FirstCellIndex,-1)}getAppointmentLastCellIndex(t){return S.getAttributeIntValue(t,T.LastCellIndex,-1)}getAppointmentColumnsCount(t){return S.getAttributeIntValue(t,T.ColumnsCount,0)}setAppointmentColumnsCount(t,e){t.setAttribute(T.ColumnsCount,e)}getAppointmentColumn(t){return S.getAttributeIntValue(t,T.Column,0)}setAppointmentColumn(t,e){t.setAttribute(T.Column,e)}getAppointmentRow(t){return S.getAttributeFloatValue(t,T.Row,-1)}getAppointmentRowSpan(t){return S.getAttributeFloatValue(t,T.RowSpan,0)}getAppointmentKey(t){return t.getAttribute(T.Key)||""}getAppointmentTopPosition(t){return S.getAttributeIntValue(t,T.AppointmentTopPosition,0)}setAppointmentTopPosition(t,e){t.setAttribute(T.AppointmentTopPosition,e)}removeAppointmentTopPosition(t){t.removeAttribute(T.AppointmentTopPosition)}getStart(t){const e=new Date(parseInt(t.getAttribute(T.Start)||""));return D.dateIncreaseWithUtcOffset(e,e.getTimezoneOffset()*D.HourSpan)}getEnd(t){const e=parseInt(t.getAttribute(T.Start)||""),n=parseInt(t.getAttribute(T.End)||"");return D.dateIncreaseWithUtcOffset(this.getStart(t),n-e)}getDuration(t){return parseInt(t.getAttribute(T.Duration)||"")}getAppointmentEnd(t){const e=this.getStart(t),n=this.getDuration(t);return new Date(e.getTime()+n)}getAllDay(t){return""===t.getAttribute(T.AllDay)}getResourceKey(t){return t.getAttribute(T.Resource)||""}getSnapToCellsMode(t){const e=t.getAttribute(T.SnapToCellsMode);return null===e?null:b[e]}getUtcOffset(t){return S.getAttributeIntValue(t,T.UtcOffset,0)}static getAttributeIntValue(t,e,n){return S.getAttributeParsedNumberValue(t,e,parseInt,n)}static getAttributeFloatValue(t,e,n){return S.getAttributeParsedNumberValue(t,e,parseFloat,n)}static getAttributeParsedNumberValue(t,e,n,i){const s=t.getAttribute(e);return s?n(s):i}}class w{static getVerticalAppointmentsContainer(t){return t.querySelectorAll(`.${y.VerticalAppointmentsClassName}`)[0]}static getHorizontalAppointmentsContainer(t){return t.querySelectorAll(`.${y.HorizontalAppointmentsClassName}`)[0]}static getHorizontalAppointments(t){const e=t.querySelectorAll(`.${y.HorizontalAppointmentClassName}`);return Array.from(e)}static getHorizontalEditableAppointments(t){const e=t.querySelectorAll(`.${y.HorizontalAppointmentClassName}.${y.EditableAppointmentClassName}`);return Array.from(e)}static getVerticalAppointments(t){const e=t.querySelectorAll(`.${y.VerticalAppointmentClassName}`);return Array.from(e)}static getVerticalEditableAppointments(t){const e=t.querySelectorAll(`.${y.VerticalAppointmentClassName}.${y.EditableAppointmentClassName}`);return Array.from(e)}static getHorizontalView(t){return t.querySelectorAll(`.${y.HorizontalViewClassName}`)[0]}static getTimeMarkerWrappers(t){return t.querySelectorAll(`.${y.TimeMarkerWrapperClassName}`)}static getTimeMarkerContainer(t){return t.querySelectorAll(`.${y.TimeMarkerClassName}`)[0]}static getTimeMarkerImages(t){const e=t.querySelectorAll(`.${y.TimeMarkerImageClassName}`);return Array.from(e)}static getTimeMarkerLine(t){return t.querySelectorAll(`.${y.TimeMarkerLineClassName}`)[0]}static getTimeIndicatorContainer(t){return t.querySelectorAll(`.${y.TimeIndicatorClassName}`)[0]}static getAppointmentContainer(t){return i(t,y.AppointmentClassName)}static getTimeCellContainer(t){return s(t,"",(function(t,e){return w.isTimeCellElement(t)}))}static getSelectedAppointment(t){return t.querySelectorAll(`.${y.SelectedAppointmentClassName}:not(.${y.DisableAppointmentClassName})`)[0]}static getEditableAppointments(t){const e=t.querySelectorAll(`.${y.EditableAppointmentClassName}`);return Array.from(e)}static isEditableAppointment(e){return t.DomUtils.hasClassName(e,y.EditableAppointmentClassName)}static getVerticalResourceHeaders(t){return t.querySelectorAll(`.${y.VerticalResourceHeaderClassName}`)}static getDateHeaders(t){const e=w.isMonthView(t)?y.TimeCellClassName:y.DateHeaderClassName;return t.querySelectorAll(`.${e}`)}static getResourcesViewport(t){return t.querySelectorAll(`.${y.ResourcesContainerClassName}`)[0]}static getTimescaleViewport(t){return t.querySelectorAll(`.${y.HeadersContainerClassName}`)[0]}static getTimeCellsViewport(t){return t.querySelectorAll(`.${y.TimeCellsContainerClassName}`)[0]}static getParentTimeCellsViewport(t){return i(t,y.TimeCellsContainerClassName)}static isVerticalAppointment(e){return t.DomUtils.hasClassName(e,y.VerticalAppointmentClassName)}static isHorizontalAppointment(e){return t.DomUtils.hasClassName(e,y.HorizontalAppointmentClassName)}static isTimeCellElement(e){return t.DomUtils.hasClassName(e,y.AllDayAreaClassName)||t.DomUtils.hasClassName(e,y.TimeCellClassName)}static isTimelineView(e){return t.DomUtils.hasClassName(e,y.TimelineViewClassName)}static isMonthView(e){return t.DomUtils.hasClassName(e,y.MonthViewClassName)}static isTopHandleElement(e){return t.DomUtils.hasClassName(e,y.TopHandleClassName)}static isBottomHandleElement(e){return t.DomUtils.hasClassName(e,y.BottomHandleClassName)}static isLeftHandleElement(e){return t.DomUtils.hasClassName(e,y.LeftHandleClassName)}static isRightHandleElement(e){return t.DomUtils.hasClassName(e,y.RightHandleClassName)}static isAppointmentSelected(e){return t.DomUtils.hasClassName(e,y.SelectedAppointmentClassName)}static isTargetAppointment(e){return t.DomUtils.hasClassName(e,y.TargetAppointmentClassName)}static isDateCellHeader(e){return t.DomUtils.hasClassName(e,y.DateCellHeadClassName)}}w.Attr=new S;class D{static dateSubsWithTimezone(t,e){return t.valueOf()-e.valueOf()+(e.getTimezoneOffset()-t.getTimezoneOffset())*D.HourSpan}static truncToDate(t){return new Date(t.getFullYear(),t.getMonth(),t.getDate())}static calculateDaysDifference(t,e){const n=D.truncToDate(t),i=D.truncToDate(e);return D.dateSubsWithTimezone(i,n)/D.DaySpan}static dateIncreaseWithUtcOffset(t,e){const n=D.dateIncrease(t,e),i=(n.getTimezoneOffset()-t.getTimezoneOffset())*D.HourSpan;return D.dateIncrease(n,i)}static dateIncrease(t,e){return new Date(t.valueOf()+e)}static addTimeSpan(t,e){return new Date(t.valueOf()+e)}static toDayTime(t){return t.valueOf()-D.truncToDate(t).valueOf()}static getCellInterval(t){const e=w.Attr.getStart(t),n=w.Attr.getEnd(t);return new E(e,this.dateSubsWithTimezone(n,e))}static dateTimeComparer(t,e){const n=e.getTime()-t.getTime();return 0===n?0:n<0?1:-1}static dateTimeIndexComparer(t,e,n){return D.dateTimeComparer(t[e],n)}static getUtcTimezoneOffset(t){return t.getTimezoneOffset()*D.HourSpan*-1}static getCurrentLocalTime(){const t=(new Date).getTime();return new Date(t)}}D.HourSpan=6e4,D.HalfHourSpan=18e5,D.DaySpan=864e5;class E{constructor(t,e){this.start=t,this.duration=e,this.isLongerOrEqualDay=e>=D.DaySpan}getStart(){return this.start}getDuration(){return this.duration}getEnd(){return D.dateIncreaseWithUtcOffset(this.start,this.duration)}intersectsWith(t){return t.getEnd().valueOf()-this.getStart().valueOf()>=0&&t.getStart().valueOf()-this.getEnd().valueOf()<=0}}class N{constructor(t,e,n){this.id=t,this.views=e,this.interval=n,this.allDay=w.Attr.getAllDay(e[0]),this.resourceKey=w.Attr.getResourceKey(e[0]),this.sourceView=this.views[0].cloneNode(!0),this.aptCont=this.views[0].parentElement}getStart(){return this.interval.start}getDuration(){return this.interval.duration}getEnd(){return this.interval.getEnd()}clearViews(){this.views.forEach((t=>{t.parentElement&&t.parentElement.removeChild(t)})),this.views=[]}static createItem(t,e){return new N(t,e,N.getAppointmentInterval(e))}static getAppointmentInterval(t){const e=w.Attr.getStart(t[0]),n=w.Attr.getDuration(t[0]);return new E(e,n)}static createItems(t){const e={};for(let n,i=0;n=t[i];i++){const t=w.Attr.getAppointmentKey(n);e[t]||(e[t]=[]),e[t].push(n)}const n=[];for(const t in e)Object.prototype.hasOwnProperty.call(e,t)&&n.push(N.createItem(t,e[t]));return n}}var H;!function(t){t[t.Horizontal=0]="Horizontal",t[t.Vertical=1]="Vertical"}(H||(H={}));const x=H;class V{}var z,O;V.CreateAppointment="createAppointment",V.SelectAppointment="selectAppointment",V.DragAppointment="dragAppointment",V.DropNewAppointment="dropNewAppointment",V.DropAppointment="dropAppointment",V.StartDragAppointment="startDragAppointment",V.StartDragNewAppointment="startDragNewAppointment",V.ShowAppointmentToolTip="showAppointmentToolTip",V.HideAppointmentToolTip="hideAppointmentToolTip",function(t){t[t.None=0]="None",t[t.DragAppointment=1]="DragAppointment",t[t.DragAppointmentStart=2]="DragAppointmentStart",t[t.DragAppointmentEnd=3]="DragAppointmentEnd",t[t.DragNewAppointment=4]="DragNewAppointment"}(z||(z={})),function(t){t[t.Top=0]="Top",t[t.Bottom=1]="Bottom"}(O||(O={}));class M{constructor(t){this.onMouseMoveHandler=this.onMouseMove.bind(this),this.onMouseMoveInternalHandler=this.onMouseMoveInternal.bind(this),this.scheduler=t,this.schedulerView=null,this.appointmentInfo=null,this.sourceAppointmentInfo=null,this.startCellInfo=null,this.currentCellInfo=null,this.dateDiff=0,this.horizontalAppointmentDragged=!1,this.lastCellChanged=!1,this.initialPageY=0,this.initialTop=0,this.initialScrollTop=0,this.lastTop=0,this.lastCell=null,this.direction=O.Top,this.mode=z.None,this.throttledDrag=v.throttle(this.onMouseMoveInternalHandler,20)}dragAppointmentStart(t,e,n){this.mode=z.DragAppointmentStart,this.startDrag(t,e,n)}dragAppointmentEnd(t,e,n){this.mode=z.DragAppointmentEnd,this.startDrag(t,e,n)}dragAppointment(t,e,n){this.mode=z.DragAppointment,this.startDrag(t,e,n)}dragNewAppointment(t){this.mode=z.DragNewAppointment,this.startDragNewAppointment(t)}dropAppointment(){var t,e;this.mode!==z.None&&(this.scheduler.removeEventListener("pointermove",this.onMouseMoveHandler),this.stopAutoScrolling(),this.mode===z.DragNewAppointment?null===(t=this.getUIHandlersBridge())||void 0===t||t.send(V.DropNewAppointment,""):(this.removeAppointmentTopPositionInfo(),null===(e=this.getUIHandlersBridge())||void 0===e||e.send(V.DropAppointment,"")),this.schedulerView=null,this.mode=z.None)}startDrag(t,e,n){var i;this.beforeStart(e),this.appointmentInfo=new N(t.id,t.views,t.interval),this.sourceAppointmentInfo=t,this.currentCellInfo=e,this.dateDiff=D.dateSubsWithTimezone(t.getStart(),e.interval.start),this.horizontalAppointmentDragged=e.layoutType===x.Horizontal,this.initialTop=this.findAppointmentViewByInterval(this.appointmentInfo.views,e.interval).offsetTop,this.initialPageY=n.pageY,this.lastTop=this.initialTop,this.lastCell=e.cell,this.initialScrollTop=this.getViewportScrollTop(),this.saveAppointmentTopPositionInfo(),null===(i=this.getUIHandlersBridge())||void 0===i||i.send(V.StartDragAppointment,{key:t.id,resize:this.mode===z.DragAppointmentStart||this.mode===z.DragAppointmentEnd}),this.startAutoScrolling()}startDragNewAppointment(t){this.beforeStart(t);const e=t.interval.start,n=D.dateIncreaseWithUtcOffset(e,t.interval.duration),i=this.scheduler.getUtcOffset(e,t.utcOffset),s=this.scheduler.getUtcOffset(n,t.utcOffset);this.dispatchEvent(V.StartDragNewAppointment,D.addTimeSpan(e,i),D.addTimeSpan(n,s),t.allDay,w.Attr.getResourceKey(t.cell)),this.startAutoScrolling()}beforeStart(t){this.startCellInfo=t,this.scheduler.addEventListener("pointermove",this.onMouseMoveHandler)}onMouseMove(t){this.mode!==z.None&&this.throttledDrag(t)}onMouseMoveInternal(t){var e;const n=null===(e=this.getSchedulerView())||void 0===e?void 0:e.findCellByCoordinates(t.clientX,t.clientY);if(!n)return;this.scheduler.getSelectedAppointmentInfo()&&(this.mode===z.DragNewAppointment?this.resizeNewAppointment(n):this.mode===z.DragAppointment?this.drag(n,t):this.resize(n,this.mode===z.DragAppointmentStart))}drag(t,e){var n;if(!(this.startCellInfo&&this.currentCellInfo&&this.appointmentInfo&&this.sourceAppointmentInfo))return;const i=this.currentCellInfo.interval;this.lastCellChanged=!1,this.updateEditedAppointmentPosition(e);const s=t.cell;if(this.lastCellChanged=this.lastCell!==s,this.lastCell=s,t.layoutType===x.Horizontal&&!this.horizontalAppointmentDragged){const t=(null===(n=s.offsetParent)||void 0===n?void 0:n.getBoundingClientRect().top)||0;this.initialTop=e.clientY-t,this.initialPageY=e.pageY,this.initialScrollTop=this.getViewportScrollTop(s),this.lastTop=this.initialTop}const o=t.interval;if(0===D.dateSubsWithTimezone(i.start,o.start)&&i.duration===o.duration){const t=w.Attr.getResourceKey(s);if(!this.appointmentInfo.resourceKey||this.appointmentInfo.resourceKey===t)return}if(this.currentCellInfo.allDay!==t.allDay)this.dateDiff=0,this.appointmentInfo.interval=t.allDay?this.sourceAppointmentInfo.allDay?new E(o.start,this.sourceAppointmentInfo.interval.duration):o:this.startCellInfo.allDay?o:new E(o.start,this.sourceAppointmentInfo.interval.duration),this.appointmentInfo.allDay=t.allDay;else{let t=D.addTimeSpan(o.start,this.dateDiff||0);this.appointmentInfo.allDay&&(t=D.truncToDate(t)),this.appointmentInfo.interval=new E(t,this.appointmentInfo.interval.duration)}this.updateResource(s),this.saveAppointmentTopPositionInfo();const a=this.scheduler.getUtcOffset(o.getStart(),t.utcOffset),r=this.scheduler.getUtcOffset(o.getEnd(),t.utcOffset);this.dispatchEvent(V.DragAppointment,D.addTimeSpan(this.appointmentInfo.getStart(),a),D.addTimeSpan(this.appointmentInfo.getEnd(),r),this.appointmentInfo.allDay,this.appointmentInfo.resourceKey),this.currentCellInfo=t}resize(t,e){if(!this.appointmentInfo||!this.currentCellInfo||!this.sourceAppointmentInfo)return;const n=t.interval,i=this.currentCellInfo.interval;if(0===D.dateSubsWithTimezone(i.start,n.start)&&i.duration===n.duration||i.isLongerOrEqualDay!==n.isLongerOrEqualDay)return;if(e){const t=this.sourceAppointmentInfo.interval.duration+D.dateSubsWithTimezone(this.sourceAppointmentInfo.interval.start,n.start);t>=0&&(this.appointmentInfo.interval=new E(n.start,t))}else this.appointmentInfo.interval.duration=D.dateSubsWithTimezone(n.getEnd(),this.sourceAppointmentInfo.interval.start);this.updateResource(this.currentCellInfo.cell);const s=this.scheduler.getUtcOffset(this.appointmentInfo.getStart(),t.utcOffset),o=this.scheduler.getUtcOffset(this.appointmentInfo.getEnd(),t.utcOffset);this.dispatchEvent(V.DragAppointment,D.addTimeSpan(this.appointmentInfo.getStart(),s),D.addTimeSpan(this.appointmentInfo.getEnd(),o),this.appointmentInfo.allDay,this.appointmentInfo.resourceKey),this.currentCellInfo=t}resizeNewAppointment(t){if(!this.startCellInfo)return;const e=t.interval,n=D.dateSubsWithTimezone(e.start,this.startCellInfo.interval.start);if(0===n&&this.startCellInfo.interval.duration===e.duration)return;n<0&&this.startCellInfo.interval.duration===e.duration?this.direction=O.Top:n>0&&this.startCellInfo.interval.duration===e.duration&&(this.direction=O.Bottom),this.direction===O.Bottom?this.startCellInfo.interval.duration=n+e.duration:this.direction===O.Top&&(this.startCellInfo.interval.start=e.start,this.startCellInfo.interval.duration+=-1*n);const i=this.startCellInfo.interval.start,s=D.dateIncreaseWithUtcOffset(i,this.startCellInfo.interval.duration),o=w.Attr.getResourceKey(t.cell),a=this.scheduler.getUtcOffset(i,t.utcOffset),r=this.scheduler.getUtcOffset(s,t.utcOffset);this.dispatchEvent(V.DragAppointment,D.addTimeSpan(i,a),D.addTimeSpan(s,r),t.allDay,o)}dispatchEvent(t,e,n,i,s){var o;null===(o=this.getUIHandlersBridge())||void 0===o||o.send(t,{start:e,end:n,isAllDay:i,resourceKey:s})}getUIHandlersBridge(){return this.scheduler.uiHandlersBridge}getSchedulerView(){return null===this.schedulerView&&(this.schedulerView=this.scheduler.getView()),this.schedulerView}findAppointmentViewByInterval(t,e){return t.find((t=>{if(e&&t.firstCell&&t.lastCell){const n=D.getCellInterval(t.firstCell).getStart(),i=D.getCellInterval(t.lastCell).getEnd();if(e.intersectsWith(new E(n,D.dateSubsWithTimezone(i,n))))return t}}))}updateEditedAppointmentPosition(t){const e=this.scheduler.getEditableAppointments();if(!this.lastCell||0===e.length||!this.currentCellInfo)return;const n=this.findAppointmentViewByInterval(e,this.currentCellInfo.interval);if(!n)return;if(!w.isHorizontalAppointment(n))return void(this.horizontalAppointmentDragged=!1);let i=!1;if(this.horizontalAppointmentDragged||(this.initialTop-=n.offsetHeight/2,this.lastTop=this.initialTop,this.horizontalAppointmentDragged=!0,i=!0),t){const e=this.getViewportScrollTop(),n=t.pageY-this.initialPageY+(e-this.initialScrollTop);this.lastTop=this.initialTop+n,i=i||0!==n}if(i||this.lastCellChanged){const t=this.lastCell.offsetTop+1;this.lastTop=Math.min(this.lastTop,t+this.lastCell.offsetHeight-n.offsetHeight-2),this.lastTop=Math.max(t,this.lastTop)}const s=this.lastTop-this.lastCell.offsetTop;e.forEach((t=>{const e=t,n=e.firstCell,i=n.offsetTop+n.offsetHeight-e.offsetHeight-2;let o=n.offsetTop+s;o>=i&&(o=i),e.style.top=o+"px",e.style.zIndex="1000"}))}saveAppointmentTopPositionInfo(){if(!this.lastCell)return;const t=this.lastTop-this.lastCell.offsetTop;w.Attr.setAppointmentTopPosition(this.getSchedulerView(),t.toString())}removeAppointmentTopPositionInfo(){w.Attr.removeAppointmentTopPosition(this.getSchedulerView())}updateResource(t){this.appointmentInfo&&this.appointmentInfo.resourceKey&&(this.appointmentInfo.resourceKey=w.Attr.getResourceKey(t))}getViewportScrollTop(t){const e=t||this.lastCell;if(!e)return 0;const n=w.getParentTimeCellsViewport(e);return(null==n?void 0:n.scrollTop)||0}startAutoScrolling(){var t,e;null===(e=null===(t=this.getSchedulerView())||void 0===t?void 0:t.getScrollViewer())||void 0===e||e.startAutoScrolling(d.Horizontal)}stopAutoScrolling(){var t,e;null===(e=null===(t=this.getSchedulerView())||void 0===t?void 0:t.getScrollViewer())||void 0===e||e.stopAutoScrolling()}}const k=C.toUpperCase();class U extends g{constructor(){super(),this.scheduler=null}connectedCallback(){super.connectedCallback(),this.scheduler=t.DomUtils.getParentByTagName(this,Q.TagName),this.scheduler&&this.initEvents()}disconnectedCallback(){super.disconnectedCallback(),document.removeEventListener(u.TouchUtils.touchMouseDownEventName,this.toolTipLostFocusHandler)}initEvents(){this.toolTipLostFocusHandler=t=>{var e,n;const i=w.getAppointmentContainer(t.target);return!(i&&w.isTargetAppointment(i)||!(null===(e=this.scheduler)||void 0===e?void 0:e.uiHandlersBridge))&&function(t,e,n,i){return function(t,e,n,i){let s=t.target;for(;s;){if(s===e||s.tagName===k||s===n)return!1;s=s.parentElement}i&&setTimeout((()=>{i()}),0);return!0}(t,e,i,(function(){e&&"string"!=typeof e&&"none"!==e.style.display&&(null==n||n.send(V.HideAppointmentToolTip,{outsideClick:!0}))}))}(t,this,null===(n=this.scheduler)||void 0===n?void 0:n.uiHandlersBridge,this.scheduler)},document.addEventListener(u.TouchUtils.touchMouseDownEventName,this.toolTipLostFocusHandler)}}var P;U.TagName="dxbl-appointment-tooltip",function(t){t[t.None=0]="None",t[t.AppointmentEditForm=1]="AppointmentEditForm",t[t.AppointmentCompactEditForm=2]="AppointmentCompactEditForm",t[t.AppointmentToolTip=3]="AppointmentToolTip",t[t.RecurrentAppointmentEditForm=4]="RecurrentAppointmentEditForm",t[t.RecurrentAppointmentDeleteForm=5]="RecurrentAppointmentDeleteForm",t[t.GotoDateForm=6]="GotoDateForm"}(P||(P={}));const R=P;class B{constructor(){this.TIMEOUT=6e4,this.subscriptions=[],this.timerId=-1}subscribe(t,e){if(-1===this.getSubscriptionIndex(t)){this.subscriptions.push({scheduler:t,updateAction:e}),-1===this.timerId&&this.startTimer()}}unsubscribe(t){const e=this.getSubscriptionIndex(t);-1!==e&&this.unsubscribeByIndex(e),0===this.subscriptions.length&&this.stopTimer()}unsubscribeByIndex(t){this.subscriptions.splice(t,1)}getSubscriptionIndex(t){for(let e,n=0;e=this.subscriptions[n];n++)if(e.scheduler===t)return n;return-1}startTimer(){this.timerId=setTimeout(this.onTimeout.bind(this),this.TIMEOUT)}stopTimer(){-1!==this.timerId&&(clearTimeout(this.timerId),this.timerId=-1)}onTimeout(){for(let t,e=0;t=this.subscriptions[e];e++)if(B.isElementValid(t.scheduler))try{t.updateAction()}catch(t){}else this.unsubscribeByIndex(e),e--;this.startTimer()}static isElementValid(t){for(;null!=t;){if("BODY"===t.tagName)return!0;t=t.parentNode}return!1}}class j{constructor(t,e){this._element=t,this._cellSelector=e,this.containers=null,this.timeCells=null}get element(){return this._element}get cellSelector(){return this._cellSelector}getContainers(){if(!this.containers){const t=this.getTimeCells();this.containers={};for(let e,n=0;e=t[n];n++){const t=w.Attr.getContainerIndex(e);this.containers[t]||(this.containers[t]={cells:[]}),this.containers[t].cells.push(e)}}return this.containers}clearObjects(){this.timeCells=null,this.containers=null}getTimeCells(){return this.timeCells||(this.timeCells=this.element.querySelectorAll(this.cellSelector)),this.timeCells}getFirstContainer(){const t=this.getContainers();for(const e in t)if(Object.prototype.hasOwnProperty.call(t,e))return t[e]}findCell(t){const e=this.getContainers();for(const n in e)if(Object.prototype.hasOwnProperty.call(e,n))for(let i,s=0;i=e[n].cells[s];s++){const e=w.Attr.getStart(i),n=w.Attr.getEnd(i);if(e.valueOf()-t.valueOf()<=0&&t.valueOf()-n.valueOf()<0)return i}return null}findStartCell(t){const e=this.getContainers();for(const n in e)if(Object.prototype.hasOwnProperty.call(e,n))for(let i,s=0;i=e[n].cells[s];s++){const e=w.Attr.getStart(i);if(t.valueOf()-e.valueOf()<=0)return i}return null}findEndCell(t){const e=this.getContainers();for(const n in e)if(Object.prototype.hasOwnProperty.call(e,n))for(let i,s=0;i=e[n].cells[s];s++){const e=w.Attr.getEnd(i);if(t.valueOf()-e.valueOf()<=0)return i}return null}findCellByPos(t,e){const n=this.getTimeCells();for(let i,s=0;i=n[s];s++){const n=i.getBoundingClientRect();if(n.top<=e&&e<n.bottom&&n.left<=t&&t<n.right)return i}return null}}class F{constructor(t,e){this.start=t,this.end=e}containsExcludeEndBound(t){return this.start<=t&&this.end>t}}function L(t,e,n){const i=t[e];return i===n?0:i<n?-1:1}function K(t,e,n,i,s){n||(n=L);let o=null==i?0:i;null==s&&(s=t.length-o);let a=o+s-1;for(;o<=a;){const i=o+(a-o>>1),s=n(t,i,e);if(0===s)return i;s<0?o=i+1:a=i-1}return-(o+1)}class ${}$.state="state",$.snapToCellsMode="snap-to-cells-mode",$.editableAppointmentKey="editable-appointment-key";class W{constructor(t,e,n){this.date=t,this.recurrenceIndex=e,this.resource=n}static from(t){const[e,n,i]=t.split(W.ClientKeyPartSeparator);return new W(e,n,i)}static IsSame(t,e,n=!1){const i=t.date===e.date&&t.recurrenceIndex===e.recurrenceIndex;return n?i:i&&t.resource===e.resource}}W.ClientKeyPartSeparator="_";class q{static selectSameAppointments(e,n){n.filter((t=>{const n=w.Attr.getAppointmentKey(t),i=W.from(n);return W.IsSame(e,i,!0)})).forEach((e=>{t.DomUtils.hasClassName(e,y.SelectedAppointmentClassName)||t.DomUtils.addClassName(e,y.SelectedAppointmentClassName)}))}}class Y extends g{constructor(){super(),this.editableAppointmentKey="",this.state="",this.snapToCellsMode=b.Auto,this.horizontalAppointments=[],this.appointmentInfos=[]}contentChanged(){super.contentChanged(),this.timeMarkerUpdater=new B,this.scrollViewer=this.querySelector(`.${f.ClassName}`),this.addEventSubscriptions(),this.recalculateLayout()}disconnectedCallback(){this.removeEventSubscriptions(),super.disconnectedCallback()}recalculateLayout(){this.initializeDateHeaders(),this.initializeTimeCells(),this.initializeAppointments(!1),this.adjust()}adjust(){this.calculateAppointments(!0),this.updateTimeMarkersEventHandler()}recalculateAppointments(t,e){this.initializeAppointments(e),e?this.calculateEditableAppointments():this.calculateAppointments(t)}findCellByCoordinates(t,e){var n;const i=null===(n=this.horizontalView)||void 0===n?void 0:n.findCellByPos(t,e);return i?this.createCellInfo(i,x.Horizontal):null}getEditableAppointmentKey(){return this.editableAppointmentKey}getScrollViewer(){return this.scrollViewer}createCellInfo(t,e){return{cell:t,layoutType:e,allDay:w.Attr.getAllDay(t),interval:D.getCellInterval(t),utcOffset:w.Attr.getUtcOffset(t)}}calculateEditableAppointments(){var t;if(null===(t=this.horizontalView)||void 0===t?void 0:t.getContainers()){this.resetCalculationInfo();for(let t,e=0;t=this.horizontalAppointments[e];e++){this.calculateHorizontalAppointmentCore(t);const e=w.Attr.getAppointmentTopPosition(this);t.style.top=t.firstCell.offsetTop+e+"px"}}}calculateAppointments(t){var e;const n=null===(e=this.horizontalView)||void 0===e?void 0:e.getContainers();n&&(this.resetCalculationInfo(),t?this.calculateHorizontalAppointmentsAndCells(this,n):this.calculateHorizontalAppointments(n))}initializeTimeCells(){var t;null===(t=this.getHorizontalViewPart())||void 0===t||t.clearObjects()}initializeAppointments(t){var e;this.horizontalAppointments=t?w.getHorizontalEditableAppointments(this):w.getHorizontalAppointments(this),this.prepareAppointments(null===(e=this.horizontalView)||void 0===e?void 0:e.getTimeCells(),this.horizontalAppointments),this.appointmentInfos=N.createItems(this.horizontalAppointments)}prepareAppointments(t,e){if(!t)return;const n={};for(let e,i=0;e=t[i];i++){e.intersects=[];const t=w.Attr.getContainerIndex(e);n[t]||(n[t]=[]),n[t].push(e)}for(let t,i=0;t=e[i];i++){const e=w.Attr.getContainerIndex(t),i=w.Attr.getAppointmentFirstCellIndex(t),s=w.Attr.getAppointmentLastCellIndex(t);if(n[e]){t.firstCell=n[e][i],t.lastCell=n[e][s],t.info={cellCount:s-i+1};for(let o=i;o<=s;o++){this.addIntersect(n[e][o],t)}}}}addIntersect(t,e){const n=t.intersects;n.findIndex((t=>w.Attr.getAppointmentKey(t)===w.Attr.getAppointmentKey(e)))<0&&n.push(e)}findTimelineResourceHeader(t,e){if(""===e)return null;const n=w.getVerticalResourceHeaders(t);for(let t,i=0;t=n[i];i++)if(this.getElementResourceKey(t)===e)return t;return null}getElementResourceKey(t){return w.Attr.getResourceKey(t)}prepareResourceHeaders(t,e){const n={};for(const i in e){if(!Object.prototype.hasOwnProperty.call(e,i))continue;const s=this.getElementResourceKey(e[i].cells[0]),o=this.findTimelineResourceHeader(t,s);o&&(o.style.height="",null==n[s]?n[s]={element:o,height:0,minHeight:0,lastContainerIndex:i}:n[s].lastContainerIndex=i)}for(const t in n)Object.prototype.hasOwnProperty.call(n,t)&&(n[t].minHeight=n[t].element.offsetHeight);return n}calculateHorizontalAppointments(t){for(const e in t){if(!Object.prototype.hasOwnProperty.call(t,e))continue;const n=t[e].cells;for(let t,e=0;t=n[e];e++)this.calculateHorizontalAppointmentsInCell(t)}}calculateHorizontalAppointmentsInCell(t){const e=this.getCalculatedHorizontalAppointmentsInCell(t),n=this.getNotCalculatedHorizontalAppointmentsInCell(t);e.forEach((t=>t.calculated=!0)),n.forEach((t=>t.calculated=!1)),this.calculateHorizontalAptsInCellCore(t,e.concat(n),e.length)}calculateHorizontalAptsInCellCore(t,e,n){this.calculateAppointmentRelativeTopOffset(e,n),this.calculateAppointmentsPosition(t,e)}calculateAppointmentRelativeTopOffset(t,e){this.adjustAppointmentCellIndexes(t),this.calculateAppointmentRelativePositionsCore(t,e)}calculateAppointmentRelativePositionsCore(t,e){const n=t.length,i=this.createBusyIntervals(2*n);let s=0;for(;s<e;)this.makeIntervalBusy(t[s],i),s++;for(;s<n;){const e=t[s];if(this.calculateHorizontalAppointmentCore(e),!e.calculated){const t=this.findAvailableRelativePosition(e,i);e.relativePosition=t}this.makeIntervalBusy(e,i),s++}}findAvailableRelativePosition(t,e){t.relativePosition=0;let n=0;const i=t.info.busyIntervalFirstCellIndex,s=t.info.busyIntervalLastCellIndex;let o=i;for(;o<=s;){const s=this.findPossibleIntersectionInterval(e[o],n);null===s||s.start>=n+t.offsetHeight?o++:(n=s.end,o=i)}return n}findPossibleIntersectionInterval(t,e){for(let n=0;n<t.length;n++){const i=t[n];if(i.containsExcludeEndBound(e)||i.start>e)return new F(i.start,i.end)}return null}calculateHorizontalAppointmentCore(t){const e=t.firstCell,n=e.getBoundingClientRect().width,i=w.Attr.getAppointmentRow(t)-w.Attr.getAppointmentFirstCellIndex(t),s=e.offsetLeft+Math.floor(n*i);let o=n-Math.floor(n*i),a=e.nextElementSibling;const r=w.Attr.getAppointmentRowSpan(t);for(let t=1;t<Math.trunc(r)&&null!=a;t++)o+=a.getBoundingClientRect().width,a=a.nextElementSibling;const l=r-Math.trunc(r);l>0&&(r<1?o-=n-e.getBoundingClientRect().width*l:null!=a&&(o+=a.getBoundingClientRect().width*l)),this.updateAppointmentCompactStyle(t,o),t.style.height="",t.style.width=`${o}px`,t.style.left=`${s}px`,t.style.top="-10000px",t.style.display=""}updateAppointmentCompactStyle(e,n){t.DomUtils.toggleClassName(e.children[0],y.CompactAppointmentClassName,n<50)}createBusyIntervals(t){const e=[];for(let n=0;n<t;n++)e.push([]);return e}makeIntervalBusy(t,e){const n=t.info.busyIntervalLastCellIndex;for(let i=t.info.busyIntervalFirstCellIndex;i<=n;i++)this.addBusyInterval(e[i],new F(t.relativePosition,t.relativePosition+t.offsetHeight))}addBusyInterval(t,e){if(!this.checkBusyIntervalExists(t,e)){let n=t.findIndex((t=>t.start>e.start));-1===n&&(n=t.length),t.splice(n,0,e)}}checkBusyIntervalExists(t,e){return t.some((t=>t.start===e.start&&t.end===e.end))}calculateAppointmentsPosition(t,e){let n=t.offsetTop;if(t.firstElementChild&&w.isDateCellHeader(t.firstElementChild)){const e=window.getComputedStyle(t).paddingTop;n+=t.firstElementChild.offsetHeight+parseInt(e)}for(let t=0;t<e.length;t++){const i=e[t],s=i.relativePosition+n;i.info.calculatedTop=s,i.style.top=s+"px"}}adjustAppointmentCellIndexes(t){const e=this.createAptsDateTimeCollection(t);this.calculateAdjustedCellIndexes(t,e)}createAptsDateTimeCollection(t){const e=[];for(let n=0;n<t.length;n++){const i=t[n],{startTime:s,endTime:o}=this.getAptAdjustedStartEndTime(i);this.addDateTime(e,s),this.addDateTime(e,o)}return e.sort(D.dateTimeComparer),e}addDateTime(t,e){this.isAlreadyAdded(t,e)||t.push(e)}isAlreadyAdded(t,e){const n=t.length;for(let i=0;i<n;i++)if(t[i].valueOf()===e.valueOf())return!0;return!1}calculateAdjustedCellIndexes(t,e){for(let n=0;n<t.length;n++)this.calculateAdjustedCellIndexesCore(t[n],e)}calculateAdjustedCellIndexesCore(t,e){const{startTime:n,endTime:i}=this.getAptAdjustedStartEndTime(t),s=K(e,n,D.dateTimeIndexComparer),o=K(e,i,D.dateTimeIndexComparer)-1;t.info.busyIntervalFirstCellIndex=s,t.info.busyIntervalLastCellIndex=o}getAptAdjustedStartEndTime(t){const e=w.Attr.getSnapToCellsMode(this),n=w.Attr.getAppointmentFirstCellIndex(t),i=w.Attr.getAppointmentLastCellIndex(t),s=e===b.Always||e===b.Auto&&n-i<=1;return{startTime:w.Attr.getStart(s?t.firstCell:t),endTime:s?w.Attr.getEnd(t.lastCell):w.Attr.getAppointmentEnd(t)}}getCalculatedHorizontalAppointmentsInCell(t){return t.intersects.filter((t=>void 0!==t.info.calculatedTop)).sort(((t,e)=>t.info.calculatedTop-e.info.calculatedTop))}getNotCalculatedHorizontalAppointmentsInCell(t){return t.intersects.filter((t=>void 0===t.info.calculatedTop)).sort(((t,e)=>{const n=e.info.cellCount-t.info.cellCount;return n||w.Attr.getStart(t).valueOf()-w.Attr.getStart(e).valueOf()}))}getHorizontalCellHeight(t){let e=-1,n=null;return t.intersects.forEach((t=>{t.info.calculatedTop>e&&(e=t.info.calculatedTop,n=t)})),n?e-t.offsetTop+n.offsetHeight:0}calculateHorizontalAppointmentsAndCells(t,e){const n=this.prepareResourceHeaders(t,e);this.style.height=this.offsetHeight+"px";for(const t in e){if(!Object.prototype.hasOwnProperty.call(e,t))continue;let i=0;const s=e[t].cells;for(let t,e=0;t=s[e];e++){this.calculateHorizontalAppointmentsInCell(t);const e=this.getHorizontalCellHeight(t);e>i&&(i=e)}const o=s[0];let a=i?i+15:0;o.style.height="",a=Math.max(o.offsetHeight,a);const r=n[this.getElementResourceKey(o)];r&&(r.lastContainerIndex===t&&(a=Math.max(r.minHeight-r.height,a)),r.height+=a),o.style.height=a+"px"}this.style.height="";for(const t in n)Object.prototype.hasOwnProperty.call(n,t)&&(n[t].element.style.height=n[t].height+"px")}initializeDateHeaders(){const t=w.getDateHeaders(this),e=D.getCurrentLocalTime();t.forEach((t=>{const n=w.Attr.getStart(t),i=w.Attr.getEnd(t);i.valueOf()-n.valueOf()>D.DaySpan||(e.valueOf()-n.valueOf()>=0&&i.valueOf()-e.valueOf()>0?t.classList.add(y.TodayClassName):t.classList.remove(y.TodayClassName))}))}resetCalculationInfo(){for(let t,e=0;t=this.horizontalAppointments[e];e++)t.info={cellCount:t.info.cellCount}}addEventSubscriptions(){var t,e;null===(t=this.timeMarkerUpdater)||void 0===t||t.subscribe(this,this.updateTimeMarkersEventHandler.bind(this)),null===(e=this.scrollViewer)||void 0===e||e.subscribeToScroll(this.viewportScrollViewerEventHandler.bind(this))}removeEventSubscriptions(){var t,e;null===(t=this.timeMarkerUpdater)||void 0===t||t.unsubscribe(this),null===(e=this.scrollViewer)||void 0===e||e.unsubscribeFromScroll()}updateTimeMarkersEventHandler(){var t;this.calculateHorizontalTimeMarker(this,null===(t=this.horizontalView)||void 0===t?void 0:t.getFirstContainer())}calculateHorizontalTimeMarker(t,e){const n=w.getTimeMarkerImages(t),i=w.getTimeMarkerLine(t);if(!n.length||!i||!e)return;const s=D.getCurrentLocalTime(),o=e.cells[e.cells.length-1],a=w.Attr.getStart(e.cells[0]),r=w.Attr.getEnd(o).valueOf()-a.valueOf(),l=D.dateSubsWithTimezone(s,a)/r;if(l>0&&l<1){n.forEach((t=>{t.style.display="unset"})),i.style.display="unset";const t=Math.round(1e4*l)/100,e=i.offsetWidth/2,s=`calc(${t}% - ${n[0].offsetWidth/2}px)`;n.forEach((t=>{t.style.left=s})),i.style.left=`calc(${t}% - ${e}px)`}else n.forEach((t=>{t.style.display="none"})),i.style.display="none"}viewportScrollViewerEventHandler(t,e){const n=w.getResourcesViewport(this);n&&(n.scrollTop=t);const i=w.getTimescaleViewport(this);i&&(i.scrollLeft=e)}getHorizontalViewPart(){return this.horizontalView||(this.horizontalView=new j(this,`.${y.AllDayAreaClassName}, .${y.HorizontalViewClassName} .${y.TimeCellClassName}`)),this.horizontalView}updated(t){t.has($.state)||t.has($.snapToCellsMode)?this.editableAppointmentKey?(this.recalculateAppointments(!this.editableAppointmentKey,!0),this.recalculateAppointments(!this.editableAppointmentKey,!1)):this.recalculateLayout():t.has($.editableAppointmentKey)&&(this.editableAppointmentKey=t.get($.editableAppointmentKey)),super.updated(t)}selectSameAppointments(t){const e=W.from(t);null!==e.resource&&q.selectSameAppointments(e,this.horizontalAppointments)}}h([A({attribute:$.editableAppointmentKey})],Y.prototype,"editableAppointmentKey",void 0),h([A()],Y.prototype,"state",void 0),h([A({attribute:$.snapToCellsMode})],Y.prototype,"snapToCellsMode",void 0);class _ extends Y{constructor(){super()}}_.TagName="dxbl-timeline-view";class G extends Y{constructor(){super(),this.verticalAppointments=[]}updateTimeMarkersEventHandler(){var t;this.calculateVerticalTimeMarkers(this,null===(t=this.verticalView)||void 0===t?void 0:t.getTimeCells())}findCellByCoordinates(t,e){var n;const i=null===(n=this.verticalView)||void 0===n?void 0:n.findCellByPos(t,e);return i?this.createCellInfo(i,x.Vertical):super.findCellByCoordinates(t,e)}calculateEditableAppointments(){super.calculateEditableAppointments(),this.calculateVerticalAppointments(this.verticalAppointments)}initializeTimeCells(){var t;super.initializeTimeCells(),null===(t=this.getVerticalViewPart())||void 0===t||t.clearObjects()}calculateAppointments(t){super.calculateAppointments(t),this.calculateVerticalAppointments(this.verticalAppointments)}initializeAppointments(t){var e;super.initializeAppointments(t),this.verticalAppointments=t?w.getVerticalEditableAppointments(this):w.getVerticalAppointments(this),this.prepareAppointments(null===(e=this.verticalView)||void 0===e?void 0:e.getTimeCells(),this.verticalAppointments),this.appointmentInfos=this.appointmentInfos.concat(N.createItems(this.verticalAppointments))}calculateVerticalAppointments(t){for(let e,n=0;e=t[n];n++)this.calculateVerticalAppointment(e)}calculateVerticalAppointment(t){const e=t.firstCell,n=(e.offsetWidth-10)/w.Attr.getAppointmentColumnsCount(t),i=e.getBoundingClientRect().height,s=w.Attr.getAppointmentRow(t)-w.Attr.getAppointmentFirstCellIndex(t),o=Math.floor(i*s),a=e.offsetTop+o,r=w.Attr.getAppointmentColumn(t),l=e.offsetLeft+n*r,p=Math.floor(i*w.Attr.getAppointmentRowSpan(t))-o;this.updateAppointmentCompactStyle(t,n),t.style.top=`${a}px`,t.style.left=`${l}px`,t.style.width=`${n}px`,t.style.height=`${p}px`,t.style.display=""}calculateVerticalTimeMarkers(t,e){if(!e)return;const n=D.getCurrentLocalTime(),i=D.truncToDate(n),s=this.getTimeMarkerInfos(t);if(0!==s.length)for(let o,a=0;o=s[a];a++)this.calculateVerticalTimeMarker(o,t,e,i,n)}getTimeMarkerInfos(t){const e=[],n=w.getTimeMarkerWrappers(t);for(let t,i=0;t=n[i];i++){const n={wrapper:t,timeMarker:w.getTimeMarkerContainer(t),timeIndicator:w.getTimeIndicatorContainer(t),firstContainerIndex:w.Attr.getFirstContainerIndex(t),lastContainerIndex:w.Attr.getLastContainerIndex(t),startFromContainer:i>0};e.push(n)}return e}calculateVerticalTimeMarker(t,e,n,i,s){const o=t.wrapper,a=this.findCellsByTime(n,s,t.firstContainerIndex,t.lastContainerIndex);if(!a.length)return void o.classList.add(y.TimeMarkerWrapperInvisibleClassName);o.classList.remove(y.TimeMarkerWrapperInvisibleClassName);const r=t.timeMarker,l=t.timeIndicator,p=r.offsetHeight/2,c=a[0].offsetLeft;let m=0;if(t.startFromContainer){const e=this.findFirstCellInContainer(n,t.firstContainerIndex);e&&(m=e.offsetLeft===c?c-p:e.offsetLeft)}const d=Math.floor(this.calculateTop(s,a[0],i));if(r.style.top=d-p+"px",r.style.left=m+"px",r.style.width=c-m+p+1+"px",this.isElementDisplayed(o)){let t=0;for(let e,n=0;e=a[n];n++)t+=e.offsetWidth;l.style.top=d-1+"px",l.style.width=t+"px",l.style.left=c+"px"}}findCellsByTime(t,e,n,i){const s=[];for(let o,a=0;o=t[a];a++)w.Attr.getContainerIndex(o)<n||w.Attr.getContainerIndex(o)>i||e.valueOf()-w.Attr.getStart(o).valueOf()>=0&&w.Attr.getEnd(o).valueOf()-e.valueOf()>0&&s.push(o);return s}getVerticalViewPart(){return this.verticalView||(this.verticalView=new j(this,`.${y.VerticalViewClassName} .${y.TimeCellClassName}`)),this.verticalView}findFirstCellInContainer(t,e){for(let n,i=0;n=t[i];i++)if(w.Attr.getContainerIndex(n)===e)return n;return null}isElementDisplayed(t){return t&&"none"!==t.style.display}calculateTop(t,e,n){const i=this.getAdaptedContainerTime(n,t),s=w.Attr.getStart(e),o=w.Attr.getEnd(e),a=D.dateSubsWithTimezone(i,s);return e.offsetTop+e.offsetHeight*a/(o.valueOf()-s.valueOf())}getAdaptedContainerTime(t,e){const n=t,i=D.dateSubsWithTimezone(e,n);let s=Math.abs(i)%D.DaySpan;return i<0&&(s=D.DaySpan-s),D.dateIncreaseWithUtcOffset(n,s)}selectSameAppointments(t){const e=W.from(t);null!==e.resource&&(super.selectSameAppointments(t),q.selectSameAppointments(e,this.verticalAppointments))}}class X extends G{constructor(){super()}}X.TagName="dxbl-day-view";class J extends Y{constructor(){super()}}J.TagName="dxbl-month-view";class Q extends e{constructor(){super(),this.onClickEventHandler=this.onDelayedClickEvent.bind(this),this.onDoubleClickEventHandler=this.onDoubleClickEvent.bind(this),this.onDragStartEventHandler=this.onDragStartEvent.bind(this),this.onDragStopEventHandler=this.onDragStopEvent.bind(this),this.unforcedFunctions={},this.appointmentDragController=new M(this),this.allowCreateAppointment=!1,this.allowEditAppointment=!1,this.allowDragAppointment=!1,this.allowResizeAppointment=!1,this.enableAppointmentTooltip=!1,this.activeFormType=R.None,this.clientUtcOffset=0,this.handlePointerEventsMode=r.Click|r.DblClick|r.Dragging}initializeComponent(){super.initializeComponent(),this.uiHandlersBridge=this.querySelector(n),this.addEventSubscriptions(),this.adjustControl()}disposeComponent(){delete this.uiHandlersBridge,this.removeEventSubscriptions(),super.disposeComponent()}getView(){return this.querySelector(`.${y.View}`)}adjustControl(){var t;null===(t=this.getView())||void 0===t||t.adjust()}addEventSubscriptions(){this.addEventListener(l.eventName,this.onClickEventHandler),this.addEventListener(p.eventName,this.onDoubleClickEventHandler),this.addEventListener(c.eventName,this.onDragStartEventHandler),this.addEventListener(m.eventName,this.onDragStopEventHandler),this.elementContentSizeSubscription=o(this,this.adjustControl.bind(this))}removeEventSubscriptions(){this.removeEventListener(l.eventName,this.onClickEventHandler),this.removeEventListener(p.eventName,this.onDoubleClickEventHandler),this.removeEventListener(c.eventName,this.onDragStartEventHandler),this.removeEventListener(m.eventName,this.onDragStopEventHandler),this.elementContentSizeSubscription&&a(this.elementContentSizeSubscription)}onClickEvent(t){var e,n,i,s;const o=t.detail.source.target,a=w.getAppointmentContainer(o),r=null===(e=this.getView())||void 0===e?void 0:e.getEditableAppointmentKey(),l=a?w.Attr.getAppointmentKey(a):null;if(!r||a&&r===l)if(a)w.isTargetAppointment(a)||this.selectAppointment(a),this.enableAppointmentTooltip&&r!==l&&(null===(i=this.uiHandlersBridge)||void 0===i||i.send(V.ShowAppointmentToolTip,"")),t.stopPropagation();else if(this.activeFormType===R.None){const e=w.getTimeCellContainer(o);this.allowCreateAppointment&&e&&(this.createAppointmentByTimeCell(e),t.stopPropagation())}else null===(s=this.uiHandlersBridge)||void 0===s||s.send(V.HideAppointmentToolTip,{outsideClick:!1});else null===(n=this.uiHandlersBridge)||void 0===n||n.send(V.HideAppointmentToolTip,{outsideClick:!1})}onDelayedClickEvent(t){this.unforcedFunctionCall(this.onClickEvent.bind(this,t),"ClickEvent",200,!0)}onDoubleClickEvent(t){const e=w.getAppointmentContainer(t.detail.source.target),n=this.getView();e&&n&&n.getEditableAppointmentKey()!==w.Attr.getAppointmentKey(e)&&(w.isTargetAppointment(e)||this.selectAppointment(e),this.clearUnforcedFunctionByKey("ClickEvent"))}onDragStartEvent(t){var e,n;const i=t.detail.source.target;if(!i||(null===(e=this.getView())||void 0===e?void 0:e.getEditableAppointmentKey()))return;const s=null===(n=this.getView())||void 0===n?void 0:n.findCellByCoordinates(t.detail.source.clientX,t.detail.source.clientY);if(!s)return;const o=w.getAppointmentContainer(i);if(o){const e=this.getAppointmentInfo(w.Attr.getAppointmentKey(o));this.allowEditAppointment&&e&&(this.allowResizeAppointment&&(w.isTopHandleElement(i)||w.isLeftHandleElement(i))?this.appointmentDragController.dragAppointmentStart(e,s,t.detail.source):this.allowResizeAppointment&&(w.isBottomHandleElement(i)||w.isRightHandleElement(i))?this.appointmentDragController.dragAppointmentEnd(e,s,t.detail.source):this.allowDragAppointment&&this.appointmentDragController.dragAppointment(e,s,t.detail.source))}else this.allowCreateAppointment&&this.allowResizeAppointment&&this.appointmentDragController.dragNewAppointment(s);t.stopPropagation()}onDragStopEvent(t){this.appointmentDragController.dropAppointment(),t.stopPropagation()}selectAppointment(e){var n,i;if(!e)return;t.DomUtils.addClassName(e,y.TargetAppointmentClassName),t.DomUtils.addClassName(e,y.SelectedAppointmentClassName);const s=w.Attr.getAppointmentKey(e);null===(n=this.getView())||void 0===n||n.selectSameAppointments(s),null===(i=this.uiHandlersBridge)||void 0===i||i.send(V.SelectAppointment,{key:w.Attr.getAppointmentKey(e)})}createAppointmentByTimeCell(t){var e;const n=w.Attr.getStart(t),i=w.Attr.getEnd(t),s=this.getUtcOffset(n,w.Attr.getUtcOffset(t)),o=this.getUtcOffset(i,w.Attr.getUtcOffset(t));null===(e=this.uiHandlersBridge)||void 0===e||e.send(V.CreateAppointment,{appointmentInfo:{start:D.addTimeSpan(n,s),end:D.addTimeSpan(i,o),isAllDay:w.Attr.getAllDay(t),resourceKey:w.Attr.getResourceKey(t)}})}getSelectedAppointmentInfo(){const t=w.getSelectedAppointment(this);return t?this.getAppointmentInfo(w.Attr.getAppointmentKey(t)):null}getAppointmentInfo(t){const e=this.getView();return e?e.appointmentInfos.filter((e=>e.id===t))[0]:null}getEditableAppointments(){return w.getEditableAppointments(this)}getUtcOffset(t,e){return D.getUtcTimezoneOffset(t)+-1*e}static get observedAttributes(){return["allow-create-appointment","allow-edit-appointment","allow-drag-appointment","allow-resize-appointment","enable-appointment-tooltip","active-form-type","client-utc-offset"]}attributeChangedCallback(t,e,n){switch(t){case"allow-create-appointment":this.allowCreateAppointment=null!==n;break;case"allow-edit-appointment":this.allowEditAppointment=null!==n;break;case"allow-drag-appointment":this.allowDragAppointment=null!==n;break;case"allow-resize-appointment":this.allowResizeAppointment=null!==n;break;case"enable-appointment-tooltip":this.enableAppointmentTooltip=null!==n;break;case"active-form-type":this.activeFormType=parseInt(n);break;case"client-utc-offset":this.clientUtcOffset=parseInt(n)}}unforcedFunctionCall(t,e,n,i){i&&this.hasUnforcedFunction(e)&&this.clearUnforcedFunctionByKey(e),void 0===this.unforcedFunctions[e]&&(this.unforcedFunctions[e]=setTimeout((()=>{t(),delete this.unforcedFunctions[e]}),n))}hasUnforcedFunction(t){return!!this.unforcedFunctions[t]}clearUnforcedFunctionByKey(t){clearTimeout(this.unforcedFunctions[t]),delete this.unforcedFunctions[t]}}Q.TagName="dxbl-scheduler",customElements.define(Q.TagName,Q),customElements.define(U.TagName,U),customElements.define(X.TagName,X),customElements.define(J.TagName,J),customElements.define(_.TagName,_);const Z={loadModule:function(){}};export{Q as DxScheduler,Z as default};
