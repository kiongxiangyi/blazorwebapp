import{_ as e}from"./_tslib-6e8ca86b.js";import{C as t,D as s}from"./devextreme-widget-wrapper-f3e25eac.js";import{C as r}from"./custom-events-helper-e7f279d3.js";import{c as o}from"./create-after-timeout-fn-executor-38b3d79d.js";import{e as n}from"./custom-element-267f9a21.js";import"./custom-theme-generator-7fa40928.js";import"./dom-utils-dfeed069.js";import"./dom-da46d023.js";import"./browser-d96520d8.js";import"./common-f853e871.js";import"./css-classes-cee8476c.js";import"./single-slot-element-base-3afabaf0.js";import"./data-qa-utils-8be7c726.js";import"./const-90026e45.js";import"./dx-ui-element-dd33ec67.js";import"./lit-element-base-29f49d31.js";import"./dx-license-1f911fcd.js";import"./lit-element-462e7ad3.js";import"./logicaltreehelper-7b19cc30.js";import"./layouthelper-0c7c89da.js";import"./point-e4ec110e.js";import"./constants-791d6f9b.js";import"./property-4ec0b52d.js";const i="dxbl-gauge-base";class a extends t{constructor(){super(a.eventName)}}a.eventName=i+".drawn";class d extends t{constructor(){super(d.eventName)}}d.eventName=i+".exported",r.register(a.eventName,(e=>e.detail)),r.register(d.eventName,(e=>e.detail));class p extends s{constructor(){super(),this._drawnExecutor=o(this.onGaugeDrawn.bind(this))}createWidgetHandlers(){return{...super.createWidgetHandlers(),onDrawn:()=>this.onGaugeDrawn(),onOptionChanged:()=>this.onGaugeOptionChanged(),onExported:()=>this.onGaugeExported()}}onGaugeDrawn(){this._drawnExecutor.reset(),this.changeLoadingPanelVisibility(!1),this.dispatchEvent(new a)}onGaugeOptionChanged(){this._drawnExecutor.execute()}onGaugeExported(){this.dispatchEvent(new d)}onlyContainerSizeChanged(){this.onGaugeDrawn()}exportTo(...e){return this.executeClientMethod("exportTo",...e)}print(...e){return this.executeClientMethod("print",...e)}svg(...e){return this.executeClientMethod("svg",...e)}}const c="dxbl-bar-gauge",m="legend",l="itemCaptions",u="color",g="font",h="subtitle",$="title",x=`${g}.${u}`,j=`${m}.${x}`,f=`${$}.${x}`,b=`${$}.${h}.${x}`,v=`${m}.${f}`,w=`${m}.${b}`,C=`--${c}`,D=`${C}-${m}`,G=`${g}-${u}`,E=`${$}-${G}`,N=`${h}-${G}`;let O=class extends p{getWidgetTypeName(){return"dxBarGauge"}processSpecialOptions(e){super.processSpecialOptions(e),this.prepareLegend(e[m])}prepareLegend(e){const t=null==e?void 0:e[l];t&&(e.customizeText=e=>{var s,r;const o=null===(s=e.item)||void 0===s?void 0:s.index;return null!==(r=t[o])&&void 0!==r?r:e.text},delete e[l])}getThemeDependentOptionsDict(){const e={[f]:`${C}-${E}`,[b]:`${C}-${N}`,[j]:`${D}-item-${G}`,[v]:`${D}-${E}`,[w]:`${D}-${N}`};return{...super.getThemeDependentOptionsDict(),...e}}};O=e([n(c)],O);export{O as DxBarGauge};
